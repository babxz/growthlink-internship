// 🛍️ Elegant E-commerce Frontend (React + Tailwind CSS)
// Note: Backend functionality (auth, DB, and payment) needs to be connected separately

import React, { useState } from 'react';
import { ShoppingCart, User, PlusCircle } from 'lucide-react';
import { Button } from '@/components/ui/button';

const dummyProducts = [
  { id: 1, name: 'Makeup Kit', price: 49.99, image: 'https://via.placeholder.com/150', category: 'Beauty' },
  { id: 2, name: 'Lip Gloss', price: 9.99, image: 'https://via.placeholder.com/150', category: 'Beauty' },
  { id: 3, name: 'Eyeliner', price: 14.99, image: 'https://via.placeholder.com/150', category: 'Beauty' },
];

export default function EcommerceApp() {
  const [cart, setCart] = useState([]);
  const [filter, setFilter] = useState('All');

  const filteredProducts = filter === 'All' ? dummyProducts : dummyProducts.filter(p => p.category === filter);

  const addToCart = (product) => {
    setCart([...cart, product]);
  };

  const removeFromCart = (id) => {
    setCart(cart.filter(p => p.id !== id));
  };

  const total = cart.reduce((sum, item) => sum + item.price, 0).toFixed(2);

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-purple-100 font-sans">
      <header className="flex justify-between items-center px-6 py-4 bg-white shadow">
        <h1 className="text-2xl font-bold text-pink-600">💄 MakeItPretty Store</h1>
        <div className="flex items-center space-x-4">
          <User className="text-purple-500" />
          <ShoppingCart className="text-pink-500" />
          <span className="font-semibold">{cart.length} items</span>
        </div>
      </header>

      <div className="flex justify-center mt-4 space-x-4">
        {['All', 'Beauty'].map(cat => (
          <button key={cat} onClick={() => setFilter(cat)} className={`px-4 py-2 rounded-full border ${filter === cat ? 'bg-pink-300 text-white' : 'bg-white text-pink-600'}`}>{cat}</button>
        ))}
      </div>

      <main className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 p-6">
        {filteredProducts.map(product => (
          <div key={product.id} className="bg-white rounded-2xl shadow-md overflow-hidden">
            <img src={product.image} alt={product.name} className="w-full h-48 object-cover" />
            <div className="p-4">
              <h3 className="text-lg font-bold text-purple-800">{product.name}</h3>
              <p className="text-pink-600 font-semibold">${product.price}</p>
              <Button onClick={() => addToCart(product)} className="mt-2 w-full bg-pink-400 hover:bg-pink-500 text-white rounded-full">Add to Cart</Button>
            </div>
          </div>
        ))}
      </main>

      <footer className="bg-white shadow-inner p-6 mt-8">
        <h2 className="text-xl font-bold text-pink-700 mb-2">🛒 Your Cart</h2>
        {cart.length === 0 ? (
          <p className="text-purple-600">Your cart is empty.</p>
        ) : (
          <ul className="space-y-2">
            {cart.map((item, idx) => (
              <li key={idx} className="flex justify-between items-center">
                <span>{item.name}</span>
                <button onClick={() => removeFromCart(item.id)} className="text-red-400 hover:text-red-600">Remove</button>
              </li>
            ))}
          </ul>
        )}
        <p className="mt-4 text-lg font-bold text-purple-900">Total: ${total}</p>
        <Button className="mt-2 bg-purple-500 text-white rounded-full">Checkout</Button>
      </footer>
    </div>
  );
}
