import React, { useState, useEffect } from 'react';
import axios from 'axios';

export default function JobBoard() {
  const [jobs, setJobs] = useState([]);
  const [search, setSearch] = useState('');
  const [locationFilter, setLocationFilter] = useState('');
  const [countryFilter, setCountryFilter] = useState('');
  const [user, setUser] = useState(null);
  const [newJob, setNewJob] = useState({ title: '', company: '', location: '', country: '', description: '' });

  useEffect(() => {
    axios.get('/api/jobs')
      .then(res => setJobs(res.data))
      .catch(err => console.error(err));
  }, []);

  const handleLogin = async (e) => {
    e.preventDefault();
    const email = e.target.email.value;
    const password = e.target.password.value;
    try {
      const res = await axios.post('/api/login', { email, password });
      setUser(res.data);
    } catch (error) {
      console.error('Login failed', error);
    }
  };

  const handleLogout = () => {
    setUser(null);
  };

  const handlePostJob = async (e) => {
    e.preventDefault();
    try {
      const res = await axios.post('/api/jobs', newJob);
      setJobs([...jobs, res.data]);
      setNewJob({ title: '', company: '', location: '', country: '', description: '' });
    } catch (error) {
      console.error('Job posting failed', error);
    }
  };

  const filteredJobs = jobs.filter(job => {
    return (
      job.title.toLowerCase().includes(search.toLowerCase()) &&
      job.location.toLowerCase().includes(locationFilter.toLowerCase()) &&
      job.country.toLowerCase().includes(countryFilter.toLowerCase())
    );
  });

  return (
    <div className="p-6 max-w-6xl mx-auto font-sans text-pink-800 bg-pink-50 min-h-screen">
      <h1 className="text-5xl font-bold mb-8 text-center text-pink-600 drop-shadow-md">✨ Dream Job Board ✨</h1>

      {!user ? (
        <form onSubmit={handleLogin} className="mb-6 max-w-md mx-auto p-6 border border-pink-300 rounded-lg bg-white shadow-md">
          <h2 className="text-2xl mb-4 text-center font-semibold text-pink-700">Login to Your Account</h2>
          <input name="email" type="email" placeholder="Email" required className="w-full mb-3 p-3 border rounded border-pink-200" />
          <input name="password" type="password" placeholder="Password" required className="w-full mb-4 p-3 border rounded border-pink-200" />
          <button type="submit" className="w-full bg-pink-500 hover:bg-pink-600 text-white py-2 rounded-full font-medium">Login</button>
        </form>
      ) : (
        <div className="mb-6 text-center">
          <p className="mb-2 text-lg">Welcome, <span className="font-semibold">{user.name}</span> 🎀 ({user.role})</p>
          <button onClick={handleLogout} className="bg-red-400 hover:bg-red-500 text-white px-6 py-2 rounded-full">Logout</button>
        </div>
      )}

      {user && user.role === 'employer' && (
        <form onSubmit={handlePostJob} className="mb-8 border border-pink-200 p-6 rounded-xl bg-white shadow-md">
          <h2 className="text-2xl font-bold mb-4 text-pink-700">📌 Post a New Job</h2>
          <input type="text" placeholder="Job Title" required className="w-full mb-3 p-3 border rounded border-pink-200" value={newJob.title} onChange={e => setNewJob({ ...newJob, title: e.target.value })} />
          <input type="text" placeholder="Company Name" required className="w-full mb-3 p-3 border rounded border-pink-200" value={newJob.company} onChange={e => setNewJob({ ...newJob, company: e.target.value })} />
          <input type="text" placeholder="Location (City)" required className="w-full mb-3 p-3 border rounded border-pink-200" value={newJob.location} onChange={e => setNewJob({ ...newJob, location: e.target.value })} />
          <input type="text" placeholder="Country" required className="w-full mb-3 p-3 border rounded border-pink-200" value={newJob.country} onChange={e => setNewJob({ ...newJob, country: e.target.value })} />
          <textarea placeholder="Job Description" required className="w-full mb-3 p-3 border rounded border-pink-200" value={newJob.description} onChange={e => setNewJob({ ...newJob, description: e.target.value })} />
          <button type="submit" className="bg-green-400 hover:bg-green-500 text-white px-6 py-2 rounded-full font-medium">Post Job</button>
        </form>
      )}

      <div className="flex flex-col md:flex-row gap-4 mb-8">
        <input
          type="text"
          placeholder="🔍 Search job titles..."
          className="p-3 border border-pink-200 rounded w-full md:w-1/3"
          value={search}
          onChange={e => setSearch(e.target.value)}
        />
        <input
          type="text"
          placeholder="📍 Filter by city..."
          className="p-3 border border-pink-200 rounded w-full md:w-1/3"
          value={locationFilter}
          onChange={e => setLocationFilter(e.target.value)}
        />
        <input
          type="text"
          placeholder="🌍 Filter by country..."
          className="p-3 border border-pink-200 rounded w-full md:w-1/3"
          value={countryFilter}
          onChange={e => setCountryFilter(e.target.value)}
        />
      </div>

      <div className="grid md:grid-cols-2 gap-8">
        {filteredJobs.map(job => (
          <div key={job.id} className="border border-pink-200 p-6 rounded-xl shadow-md bg-white hover:shadow-lg transition-all">
            <h2 className="text-2xl font-bold text-pink-600 mb-1">{job.title}</h2>
            <p className="text-pink-800 font-medium">{job.company}</p>
            <p className="text-pink-500 text-sm">📍 {job.location}, {job.country}</p>
            <p className="text-sm text-gray-700 mt-1">{job.description.substring(0, 100)}...</p>
            <button className="mt-4 bg-pink-400 hover:bg-pink-500 text-white px-4 py-2 rounded-full">Apply Now 💌</button>
          </div>
        ))}
      </div>
    </div>
  );
}
