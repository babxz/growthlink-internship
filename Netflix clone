// 🍿 MeFlix - React + Tailwind CSS + TMDB API
// Ensure your .env file contains: VITE_TMDB_API_KEY=your_api_key_here

import React, { useEffect, useState } from 'react';
import axios from 'axios';

const apiKey = import.meta.env.VITE_TMDB_API_KEY;

const endpoints = {
  trending: `https://api.themoviedb.org/3/trending/all/week?api_key=${apiKey}`,
  popular: `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}`,
  topRated: `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}`,
};

async function fetchMovies(url) {
  try {
    const res = await axios.get(url);
    return res.data.results;
  } catch (err) {
    console.error('Failed to fetch movies:', err);
    return [];
  }
}

export default function MeFlix() {
  const [trending, setTrending] = useState([]);
  const [popular, setPopular] = useState([]);
  const [topRated, setTopRated] = useState([]);
  const [search, setSearch] = useState('');
  const [searchResults, setSearchResults] = useState([]);

  useEffect(() => {
    fetchMovies(endpoints.trending).then(setTrending);
    fetchMovies(endpoints.popular).then(setPopular);
    fetchMovies(endpoints.topRated).then(setTopRated);
  }, []);

  const handleSearch = async () => {
    if (!search.trim()) return;
    try {
      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${search}`);
      setSearchResults(res.data.results);
    } catch (err) {
      console.error('Search failed:', err);
    }
  };

  const renderMovies = (title, movies) => (
    <div className="mb-8">
      <h2 className="text-2xl font-bold text-pink-700 mb-2">{title}</h2>
      <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
        {movies.map((movie) => (
          <div
            key={movie.id}
            className="bg-white rounded-xl overflow-hidden shadow hover:shadow-lg transition"
          >
            <img
              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
              alt={movie.title || movie.name}
              className="w-full h-64 object-cover"
            />
            <div className="p-2">
              <h3 className="text-sm font-semibold text-purple-700">
                {movie.title || movie.name}
              </h3>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-100 to-pink-50 p-6 font-sans">
      <header className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-extrabold text-pink-600">🍿 MeFlix</h1>
        <div className="flex space-x-2">
          <input
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            type="text"
            placeholder="Search for movies..."
            className="px-4 py-2 rounded-full border border-purple-300 focus:outline-none"
          />
          <button
            onClick={handleSearch}
            className="bg-pink-400 hover:bg-pink-500 text-white px-4 py-2 rounded-full"
          >
            Search
          </button>
        </div>
      </header>

      {searchResults.length > 0 && renderMovies('Search Results 🎯', searchResults)}
      {renderMovies('Trending Now 💥', trending)}
      {renderMovies('Popular Movies 💖', popular)}
      {renderMovies('Top Rated 🌟', topRated)}

      <footer className="mt-12 text-center text-purple-500">
        Made with love 💕 for movie lovers
      </footer>
    </div>
  );
}
